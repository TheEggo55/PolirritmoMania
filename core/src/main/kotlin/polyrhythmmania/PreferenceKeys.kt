package polyrhythmmania


@Suppress("MayBeConstant")
object PreferenceKeys {
    
    val LAST_VERSION = "lastVersion"
    val LAST_UPDATE_NOTES = "lastUpdateNotes"
    
    val NEW_INDICATOR_LIBRARY = "newIndicator_libraryView"
    val NEW_INDICATOR_EDITORHELP_TEXPACK = "newIndicator_editorHelp_texturePack"
    val NEW_INDICATOR_EDITORHELP_EXPORTING = "newIndicator_editorHelp_exporting"
    val NEW_INDICATOR_EDITORHELP_PRMPROJ = "newIndicator_editorHelp_prmproj"
    val NEW_INDICATOR_EDITORHELP_SPOTLIGHTS = "newIndicator_editorHelp_spotlights"
    val NEW_INDICATOR_EXTRAS_ASM = "newIndicator_extras_assemble"
    val NEW_INDICATOR_EXTRAS_SOLITAIRE = "newIndicator_extras_solitaire"
    val NEW_INDICATOR_STORY_MODE = "newIndicator_storyMode"
    val NEW_INDICATOR_ENDLESS_MODE_HELP = "newIndicator_endlessMode_help"
    
    val FILE_CHOOSER_EDITOR_MUSIC = "fileChooser_editor_music"
    val FILE_CHOOSER_EDITOR_SAVE = "fileChooser_editor_save"
    val FILE_CHOOSER_EDITOR_LOAD = "fileChooser_editor_open"
    val FILE_CHOOSER_PLAY_SAVED_LEVEL = "fileChooser_play_savedLevel"
    val FILE_CHOOSER_TEXPACK_EXPORT_TO_DIR = "fileChooser_texpack_exportToDirectory"
    val FILE_CHOOSER_TEXPACK_IMPORT_TEX_TO_DIR = "fileChooser_texpack_importTexturesToDirectory"
    val FILE_CHOOSER_TEXPACK_ENTIRE = "fileChooser_texpack_saveLoadEntire"
    val FILE_CHOOSER_EDITOR_EXPORT = "fileChooser_editor_exportLevel"
    val FILE_CHOOSER_LIBRARY_VIEW = "fileChooser_libraryView"
    val FILE_CHOOSER_BANNER_IMAGE = "fileChooser_bannerImage"
    
    val SETTINGS_MASTER_VOLUME = "settings_master_volume"
    val SETTINGS_GAMEPLAY_VOLUME = "settings_gameplay_volume"
    val SETTINGS_MENU_MUSIC_VOLUME = "settings_menu_volume_music"
    val SETTINGS_MENU_SFX_VOLUME = "settings_menu_volume_sfx"
    val SETTINGS_WINDOWED_RESOLUTION = "settings_windowedResolution"
    val SETTINGS_FULLSCREEN = "settings_fullscreen"
    val SETTINGS_FULLSCREEN_MONITOR = "settings_fullscreen_monitor"
    val SETTINGS_SHOW_INPUT_FEEDBACK_BAR = "settings_showInputFeedbackBar"
    val SETTINGS_SHOW_SKILL_STAR = "settings_showSkillStar"
    val SETTINGS_DISCORD_RPC = "settings_discord_rich_presence"
    val SETTINGS_AUDIODEVICE_BUFFER_COUNT = "settings_audioDevice_bufferCount"
    val SETTINGS_AUDIODEVICE_BUFFER_SIZE = "settings_audioDevice_bufferSize"
    val SETTINGS_MIXER = "settings_mixer"
    val SETTINGS_USE_LEGACY_SOUND = "settings_useLegacySound"
    val SETTINGS_MAINMENU_FLIP_ANIMATION = "settings_mainMenu_flipAnimation"
    val SETTINGS_ACHIEVEMENT_NOTIFICATIONS = "settings_achievementNotifications"
    val SETTINGS_LOCALE = "settings_locale"
    val SETTINGS_CALIBRATION_AUDIO_OFFSET_MS = "settings_calibration_audioOffsetMs"
    val SETTINGS_CALIBRATION_DISABLE_INPUT_SFX = "settings_calibration_disableInputSFX"
    val SETTINGS_VSYNC = "settings_vsync"
    val SETTINGS_MAX_FPS = "settings_max_framerate"
    val SETTINGS_FORCE_TEXTURE_PACK = "settings_forceTexturePack"
    val SETTINGS_ONLY_DEFAULT_PALETTE_OLD = "settings_onlyDefaultPalette"
    val SETTINGS_FORCE_TILESET_PALETTE = "settings_forceTilesetPalette"
    val SETTINGS_FORCE_SIGN_LANGUAGE = "settings_forceSignLanguage"
    val SETTINGS_REDUCED_MOTION = "settings_reducedMotion"
    val SETTINGS_DISABLE_SPOTLIGHTS = "settings_disableSpotlights"
    val SETTINGS_SUBTITLE_OPACITY = "settings_subtitleOpacity"
    
    val EDITORSETTINGS_DETAILED_MARKER_UNDO = "editorsettings_detailed_marker_undo"
    val EDITORSETTINGS_CAMERA_PAN_ON_DRAG_EDGE = "editorsettings_camera_pan_on_drag_edge"
    val EDITORSETTINGS_PANNING_DURING_PLAYBACK = "editorsettings_panning_during_playback"
    val EDITORSETTINGS_AUTOSAVE_INTERVAL = "editorsettings_autosave_interval"
    val EDITORSETTINGS_MUSIC_WAVEFORM_OPACITY = "editorsettings_music_waveform_opacity"
    val EDITORSETTINGS_HIGHER_ACCURACY_PREVIEW = "editorsettings_higher_accuracy_preview"
    val EDITORSETTINGS_PLAYTEST_STARTS_PLAY = "editorsettings_playtest_starts_play"
    val EDITORSETTINGS_ARROW_KEYS_LIKE_SCROLL = "editorsettings_arrow_keys_like_scroll"
    val EDITORSETTINGS_UI_SCALE = "editorsettings_ui_scale"
    
    val KEYMAP_KEYBOARD = "keymap_keyboard"
    
    val ENDLESS_DUNK_HIGHSCORE = "endlessMode_dunk_highScore"
    val ENDLESS_DAILY_CHALLENGE = "endlessMode_dailyChallenge"
    val ENDLESS_DAILY_CHALLENGE_STREAK = "endlessMode_dailyChallenge_streak"
    val ENDLESS_HIGH_SCORE = "endlessMode_endless_highScore"
    val SIDEMODE_ASSEMBLE_NORMAL = "sideMode_assemble_normal"
    val SIDEMODE_SOLITAIRE_GAME_SFX = "sideMode_solitaire_gameSFX"
    val SIDEMODE_SOLITAIRE_GAME_MUSIC = "sideMode_solitaire_gameMusic"
    
    
}